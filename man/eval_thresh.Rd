% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calibrate_thresholds.R
\name{eval_thresh}
\alias{eval_thresh}
\title{Evaluate a single dataset for a single pp_threshold and ppp_threshold
combination}
\usage{
eval_thresh(
  data,
  pp_threshold,
  ppp_threshold,
  direction = "greater",
  p0 = NULL,
  delta = 0,
  prior = c(0.5, 0.5),
  S = 5000,
  N
)
}
\arguments{
\item{data}{the name of the dataset}

\item{pp_threshold}{the posterior probability threshold of interest}

\item{ppp_threshold}{the posterior probability threshold of interest for
futility monitoring}

\item{direction}{"greater" (default) if interest is in P(p1 > p0) and "less"
if interest is in P(p1 < p0) for two-sample case. For one-sample case,
"greater" if interest is in P(p > p0) and "less" if interest is in P(p < p0).}

\item{p0}{The target value to compare to in the one-sample case}

\item{delta}{clinically meaningful difference between groups.
Typically 0 (default).}

\item{prior}{hyperparameters of prior beta distribution.
Beta(0.5, 0.5) is default}

\item{S}{number of samples, default is 5000}

\item{N}{the total planned sample size at the end of the trial, c(N0, N1)
for two-sample case; integer of total planned sample size at end of trial N
for one-sample case}
}
\value{
Returns a tibble with the total sample size at the end of the
trial, the number of responses observed at the end of the trial, the
pp_threshold considered, the ppp_threshold considered, the observed
predictive probability generated from calc_predictive(), and an indicator
for whether the trial was positive or not at the end
}
\description{
Helper function for calibrate_thresholds() function that evaluates
a single combination of a pp_threshold and a ppp_threshold for a single
dataset
}
\examples{

\dontrun{
set.seed(123)

# One-sample case
dat1 <- sim_dat1(prob = 0.1, n = seq(5, 25, 5))
eval_thresh(dat1, 0.95, 0.3, p0 = 0.1, delta = NULL, S = 500, N = 25)

# Two-sample case
dat2 <- sim_dat1(prob = c(0.1, 0.3), n = cbind(seq(5, 25, 5), seq(5, 25, 5)))
eval_thresh(dat2, 0.95, 0.3, S = 500, N = c(25, 25))
}
}
